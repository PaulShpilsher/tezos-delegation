// Code generated by MockGen. DO NOT EDIT.
// Source: tezos-delegation/internal/services (interfaces: DelegationServicePort)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	model "tezos-delegation/internal/model"

	gomock "github.com/golang/mock/gomock"
)

// MockDelegationServicePort is a mock of DelegationServicePort interface.
type MockDelegationServicePort struct {
	ctrl     *gomock.Controller
	recorder *MockDelegationServicePortMockRecorder
}

// MockDelegationServicePortMockRecorder is the mock recorder for MockDelegationServicePort.
type MockDelegationServicePortMockRecorder struct {
	mock *MockDelegationServicePort
}

// NewMockDelegationServicePort creates a new mock instance.
func NewMockDelegationServicePort(ctrl *gomock.Controller) *MockDelegationServicePort {
	mock := &MockDelegationServicePort{ctrl: ctrl}
	mock.recorder = &MockDelegationServicePortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDelegationServicePort) EXPECT() *MockDelegationServicePortMockRecorder {
	return m.recorder
}

// GetDelegations mocks base method.
func (m *MockDelegationServicePort) GetDelegations(arg0 context.Context, arg1, arg2 int, arg3 *int) ([]model.Delegation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDelegations", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]model.Delegation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDelegations indicates an expected call of GetDelegations.
func (mr *MockDelegationServicePortMockRecorder) GetDelegations(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDelegations", reflect.TypeOf((*MockDelegationServicePort)(nil).GetDelegations), arg0, arg1, arg2, arg3)
}
