// Code generated by MockGen. DO NOT EDIT.
// Source: tezos-delegation/internal/services (interfaces: DelegationServiceInterface)

package mocks

import (
	context "context"
	reflect "reflect"
	model "tezos-delegation/internal/model"

	gomock "github.com/golang/mock/gomock"
)

type MockDelegationServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDelegationServiceInterfaceMockRecorder
}

type MockDelegationServiceInterfaceMockRecorder struct {
	mock *MockDelegationServiceInterface
}

func NewMockDelegationServiceInterface(ctrl *gomock.Controller) *MockDelegationServiceInterface {
	mock := &MockDelegationServiceInterface{ctrl: ctrl}
	mock.recorder = &MockDelegationServiceInterfaceMockRecorder{mock}
	return mock
}

func (m *MockDelegationServiceInterface) EXPECT() *MockDelegationServiceInterfaceMockRecorder {
	return m.recorder
}

func (m *MockDelegationServiceInterface) GetDelegations(arg0 context.Context, arg1, arg2 int, arg3 *int) ([]model.Delegation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDelegations", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]model.Delegation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (mr *MockDelegationServiceInterfaceMockRecorder) GetDelegations(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDelegations", reflect.TypeOf((*MockDelegationServiceInterface)(nil).GetDelegations), arg0, arg1, arg2, arg3)
}
